definitions:
  controllers.StartAgentRequest:
    properties:
      role:
        type: string
      task:
        type: string
    required:
    - role
    - task
    type: object
  controllers.UserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  worker.WorkerMessage:
    description: Message structure for inter-agent communication
    properties:
      from_agent_id:
        description: The ID of the sending agent
        type: string
      message_type:
        description: The type of message being sent
        type: string
      payload:
        description: The message payload
        type: object
      to_agent_id:
        description: The ID of the receiving agent
        type: string
    type: object
  worker.WorkerProgressNotification:
    description: Progress notification containing the agent ID and progress message
    properties:
      agent_id:
        description: The ID of the agent reporting progress
        type: string
      progress:
        description: The progress message content
        type: string
    type: object
  worker.WorkerResponseNotification:
    description: Response notification containing the agent ID and response message
    properties:
      agent_id:
        description: |-
          The ID of the agent sending the response
          @Description Unique identifier of the agent
        type: string
      response:
        description: |-
          The response message content
          @Description Response message from the agent
        type: string
    type: object
  ws.WebSocketDataTypes:
    description: All websocket response data types
    properties:
      message:
        $ref: '#/definitions/worker.WorkerMessage'
      pong:
        type: string
      progress:
        $ref: '#/definitions/worker.WorkerProgressNotification'
      response:
        $ref: '#/definitions/worker.WorkerResponseNotification'
    type: object
  ws.WsEventType:
    enum:
    - ping
    - pong
    - agent_response
    - agent_progress
    type: string
    x-enum-varnames:
    - WsEventTypePing
    - WsEventTypePong
    - WsEventTypeAgentResponse
    - WsEventTypeAgentProgress
  ws.WsMessage:
    properties:
      data:
        $ref: '#/definitions/ws.WebSocketDataTypes'
      event:
        $ref: '#/definitions/ws.WsEventType'
    type: object
host: localhost:8080
info:
  contact:
    email: roackb2@gmail.com
    name: Jay / Fienna Liang
    url: https://github.com/roackb2
  description: This is the API for the Lucid project.
  title: Lucid API
  version: "1.0"
paths:
  /api/v1/agents/create:
    post:
      consumes:
      - application/json
      description: Starts a new agent with role and task
      parameters:
      - description: Agent details
        in: body
        name: agent
        required: true
        schema:
          $ref: '#/definitions/controllers.StartAgentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Agent created successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Start a new agent
      tags:
      - agents
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: Creates a new user with the provided details
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - users
  /healthz:
    get:
      description: Returns the health status of the application
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check endpoint
      tags:
      - healthz
  /ws:
    get:
      description: Handles websocket connections and delegates to the ws package
      responses:
        "200":
          description: Websocket connection established
          schema:
            items:
              $ref: '#/definitions/ws.WsMessage'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Handle websocket connections
      tags:
      - websocket
securityDefinitions:
  None:
    type: basic
swagger: "2.0"
