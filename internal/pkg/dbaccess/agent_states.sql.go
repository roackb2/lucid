// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: agent_states.sql

package dbaccess

import (
	"context"
)

const createAgentState = `-- name: CreateAgentState :exec
INSERT INTO agent_states (agent_id, state) VALUES ($1, $2)
`

type CreateAgentStateParams struct {
	AgentID string
	State   []byte
}

func (q *Queries) CreateAgentState(ctx context.Context, arg CreateAgentStateParams) error {
	_, err := q.db.Exec(ctx, createAgentState, arg.AgentID, arg.State)
	return err
}

const getAgentState = `-- name: GetAgentState :one
SELECT id, agent_id, state, created_at, updated_at FROM agent_states WHERE agent_id = $1
`

func (q *Queries) GetAgentState(ctx context.Context, agentID string) (AgentState, error) {
	row := q.db.QueryRow(ctx, getAgentState, agentID)
	var i AgentState
	err := row.Scan(
		&i.ID,
		&i.AgentID,
		&i.State,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
